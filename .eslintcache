[{"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\index.js":"1","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\App.js":"2","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\Store.js":"3","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\Header.js":"4","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\registerForm.js":"5","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\loginForm.js":"6","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\GetProducts.js":"7","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\admin\\addProduct.js":"8","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\users.slice.js":"9","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\validateToken.slice.js":"10","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\product.slice.js":"11","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\registerUser.slice.js":"12","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\Header.style.js":"13","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\registerForm.style.js":"14","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\GetProducts.style.js":"15","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\loginForm.style.js":"16","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\admin\\addProduct.style.js":"17","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\LandingPage.js":"18","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\LandingPage.style.js":"19","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\Carousel.js":"20","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\ItemView.js":"21","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\ItemView.style.js":"22","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\Cart.js":"23"},{"size":400,"mtime":1608559684747,"results":"24","hashOfConfig":"25"},{"size":2059,"mtime":1609855230757,"results":"26","hashOfConfig":"25"},{"size":513,"mtime":1608559684749,"results":"27","hashOfConfig":"25"},{"size":2810,"mtime":1609855797589,"results":"28","hashOfConfig":"25"},{"size":2952,"mtime":1608559684724,"results":"29","hashOfConfig":"25"},{"size":2860,"mtime":1608894630755,"results":"30","hashOfConfig":"25"},{"size":2338,"mtime":1609348608630,"results":"31","hashOfConfig":"25"},{"size":6717,"mtime":1609171178329,"results":"32","hashOfConfig":"25"},{"size":1216,"mtime":1608559684752,"results":"33","hashOfConfig":"25"},{"size":764,"mtime":1608816091021,"results":"34","hashOfConfig":"25"},{"size":2415,"mtime":1609690944714,"results":"35","hashOfConfig":"25"},{"size":707,"mtime":1608559684751,"results":"36","hashOfConfig":"25"},{"size":485,"mtime":1608832161558,"results":"37","hashOfConfig":"25"},{"size":1468,"mtime":1608559684737,"results":"38","hashOfConfig":"25"},{"size":1039,"mtime":1608648914068,"results":"39","hashOfConfig":"25"},{"size":1489,"mtime":1608559684723,"results":"40","hashOfConfig":"25"},{"size":2894,"mtime":1608562649329,"results":"41","hashOfConfig":"25"},{"size":265,"mtime":1608700607957,"results":"42","hashOfConfig":"25"},{"size":250,"mtime":1608646149654,"results":"43","hashOfConfig":"25"},{"size":1154,"mtime":1608700622037,"results":"44","hashOfConfig":"25"},{"size":4782,"mtime":1609856673661,"results":"45","hashOfConfig":"25"},{"size":1524,"mtime":1609348648998,"results":"46","hashOfConfig":"25"},{"size":1023,"mtime":1609859270592,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1v52bj9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\index.js",[],["101","102"],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\App.js",["103"],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\Store.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\Header.js",["104","105","106"],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\registerForm.js",["107"],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport {useState, useEffect} from 'react'\r\n\r\nimport {Box, TextField, Button, Typography, Grow} from '@material-ui/core'\r\nimport {userRegister} from '../../redux/slices/registerUser.slice'\r\nimport RegisterFormStyle from './registerForm.style'\r\nimport KNLOGO from '../../assets/knBlack.png'\r\n\r\n\r\nconst RegisterForm = ({setModalLogin,setModalRegister}) => {\r\n    const cls = RegisterFormStyle()\r\n    const dispatch = useDispatch()\r\n\r\n    const RegisterUser = useSelector(state => state.RegisterUserSlice)\r\n\r\n    const [registerUser, setRegisterUser] = useState({\r\n        _email : undefined,\r\n        _password : undefined,\r\n        _password2 : undefined,\r\n        _username : undefined\r\n    })\r\n\r\n    const submitUser = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userRegister(registerUser))\r\n    }\r\n\r\n    const sendToLogin = (e) => {\r\n        if(RegisterUser){\r\n            const getID = RegisterUser._id? RegisterUser._id : undefined\r\n            if(getID) {\r\n                setModalLogin(true)\r\n                setModalRegister(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const showError = RegisterUser? RegisterUser.msg : ''\r\n\r\n    useEffect(() => {\r\n        sendToLogin()\r\n    }, [RegisterUser, sendToLogin])\r\n    \r\n    return (\r\n        <Grow in={true}>\r\n            <Box className={cls.container}>\r\n                <img src={KNLOGO} alt=\"knlogo\" height='40'/>\r\n                <Typography align='center' className={cls.displayText}>BE A MEMBER</Typography>\r\n                <Typography align='center' className={cls.displayText}>\r\n                    Create your account and get first access to the very best of KICKNIKS products.\r\n                </Typography>\r\n\r\n                <Typography className={cls.errors}>{showError}</Typography>\r\n                <form className={cls.form} onSubmit={submitUser}>\r\n                    <TextField type='email' label='Email' onChange={e => setRegisterUser({...registerUser, _email : e.target.value})}/>\r\n                    <TextField type='password' label='Password' onChange={e => setRegisterUser({...registerUser, _password : e.target.value})}/>\r\n                    <TextField type='password' label='Repeat Password' onChange={e => setRegisterUser({...registerUser, _password2 : e.target.value})}/> \r\n                    <TextField type='text' label='Username' onChange={e => setRegisterUser({...registerUser, _username : e.target.value})}/>   \r\n                    <Button className={cls.loginBtn} type='submit' variant='contained'>REGISTER</Button>\r\n                </form>\r\n                <Typography align='center' className={cls.displayText}>\r\n                    By creating an account, you agree to KICKNIKS's <span className={cls.span}>Privacy Policy</span> and <span className={cls.span}>Terms of Use</span>.\r\n                </Typography>\r\n            </Box>\r\n        </Grow>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\loginForm.js",["108","109"],"import { useDispatch, useSelector } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport { userLogin } from '../../redux/slices/users.slice'\r\nimport { validateToken } from '../../redux/slices/validateToken.slice'\r\nimport { Box, TextField, Button, Typography, Grow } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport loginFormStyle from './loginForm.style'\r\nimport KNLOGO from '../../assets/knBlack.png'\r\n\r\nconst LoginForm = ({ setModalLogin, setModalRegister }) => {\r\n  const cls = loginFormStyle()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const LoggedInUser = useSelector((state) => state.UserSlice)\r\n  const ValidateUser = useSelector((state) => state.ValidateTokenSlice)\r\n\r\n  const [user, setUser] = useState({\r\n    _email: '',\r\n    _password: '',\r\n  })\r\n  const showError = LoggedInUser ? LoggedInUser.msg : null\r\n\r\n  const userValidation = () => {\r\n    if (LoggedInUser) {\r\n      const getToken = localStorage.getItem('authToken')\r\n      if (getToken) return dispatch(validateToken(getToken))\r\n    }\r\n  }\r\n\r\n  const toRegister = () => {\r\n    setModalLogin(false)\r\n    setModalRegister(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    userValidation()\r\n  }, [LoggedInUser, ValidateUser])\r\n\r\n  const submitUser = (e) => {\r\n    e.preventDefault()\r\n    dispatch(userLogin(user))\r\n    if (ValidateUser) {\r\n      if (ValidateUser.validToken) {\r\n        setModalLogin(false)\r\n        window.location.reload()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grow in={true}>\r\n      <Box className={cls.container}>\r\n        <img src={KNLOGO} alt='knlogo' height='40' />\r\n        <Typography align='center' className={cls.displayText}>\r\n          YOUR ACCESS FOR EVERYTHING KICKNIKS\r\n        </Typography>\r\n\r\n        <Typography className={cls.errors}>{showError}</Typography>\r\n\r\n        <form className={cls.form} onSubmit={submitUser}>\r\n          <TextField type='email' label='Email' onChange={(e) => setUser({ ...user, _email: e.target.value })} />\r\n          <TextField\r\n            type='password'\r\n            label='Password'\r\n            onChange={(e) => setUser({ ...user, _password: e.target.value })}\r\n          />\r\n          <Button className={cls.loginBtn} type='submit' variant='contained'>\r\n            login\r\n          </Button>\r\n        </form>\r\n\r\n        <Typography align='center' className={cls.displayText}>\r\n          By logging in, you agree to KICKNIKS's <span className={cls.span}>Privacy Policy</span> and{' '}\r\n          <span className={cls.span}>Terms of Use</span>.\r\n        </Typography>\r\n        <Typography align='center' className={cls.displayText}>\r\n          Not a member?{' '}\r\n          <span className={cls.span} onClick={toRegister}>\r\n            Sign up\r\n          </span>\r\n        </Typography>\r\n      </Box>\r\n    </Grow>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\GetProducts.js",["110","111","112","113","114"],"import { useDispatch, useSelector } from 'react-redux'\r\nimport { useState, useEffect } from 'react'\r\nimport productSlice, { getProducts } from '../../redux/slices/product.slice'\r\nimport { Box, Typography, Modal } from '@material-ui/core'\r\nimport GetProductStyle from './GetProducts.style'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { openProduct } from '../../redux/slices/product.slice'\r\nimport ItemView from './ItemView'\r\n\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst GetProducts = () => {\r\n  const cls = GetProductStyle()\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const Products = useSelector((state) => state.ProductSlice)\r\n  const [modalItem, setModalItem] = useState(false)\r\n  const [item_ID, setitem_ID] = useState()\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts())\r\n  }, [])\r\n\r\n  const itemClick = (prod_id) => {\r\n    setModalItem(true)\r\n    setitem_ID(prod_id)\r\n  }\r\n  // console.log('getprod', Products.allProducts)\r\n  return (\r\n    <Box className={cls.container}>\r\n      <Typography align='center' className={cls.openingText}>\r\n        OUR COLLECTION\r\n      </Typography>\r\n      <Box className={cls.items}>\r\n        {Products.allProducts &&\r\n          Products.allProducts.map((prod) => (\r\n            <Box onClick={() => itemClick(prod._id)} className={cls.itemCard} key={prod._id}>\r\n              <Carousel interval={2500} indicators={false} controls={false} className={cls.carousel}>\r\n                {prod.KN_images.map((itemImage, index) => (\r\n                  <Carousel.Item key={index} className={cls.carouselItem}>\r\n                    <img className={cls.carouselImage} src={itemImage} alt='Item' />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n              <Box className={cls.itemDetails}>\r\n                <Typography className={cls.itemDets}>{prod.KN_item}</Typography>\r\n                <Typography className={cls.itemDets}>₱{parseFloat(prod.KN_price).toLocaleString()}</Typography>\r\n              </Box>\r\n            </Box>\r\n          ))}\r\n      </Box>\r\n\r\n      <Modal open={modalItem} onClose={() => setModalItem(false)} style={{ overflow: 'scroll' }}>\r\n        <ItemView item_ID={item_ID} />\r\n      </Modal>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default GetProducts\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\admin\\addProduct.js",["115"],"import { useState, useEffect } from 'react'\r\nimport { validateToken } from '../../redux/slices/validateToken.slice'\r\nimport FileBase64 from 'react-file-base64'\r\nimport { Box, TextField, Button, Typography, Card, Select, InputLabel } from '@material-ui/core'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addProducts } from '../../redux/slices/product.slice'\r\nimport AddProductStyle from './addProduct.style'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst AddProduct = () => {\r\n  const dispatch = useDispatch()\r\n  const cls = AddProductStyle()\r\n  const history = useHistory()\r\n  const validateUser = useSelector((state) => state.ValidateTokenSlice)\r\n  const productStatus = useSelector((state) => state.ProductSlice)\r\n\r\n  const [productInfo, setProductInfo] = useState({\r\n    KN_item: undefined,\r\n    KN_images: [],\r\n    KN_brand: undefined,\r\n    KN_description: undefined,\r\n    KN_shoeType: undefined,\r\n    KN_price: undefined,\r\n    KN_stock: undefined,\r\n  })\r\n  const [imgArray, setImgArray] = useState([])\r\n\r\n  //useEffect(() => {}, [productInfo, imgArray, productStatus, dispatch])\r\n\r\n  const pushImage = (image) => setImgArray([...imgArray, image])\r\n  const submitNewProduct = (e) => {\r\n    e.preventDefault()\r\n    const token = localStorage.getItem('authToken')\r\n    if (token) return dispatch(addProducts(productInfo, token))\r\n  }\r\n  const showError = productStatus ? productStatus.msg : null\r\n  const showSuccess = productStatus ? (productStatus.KN_item ? 'Item added successfully.' : null) : null\r\n\r\n  //permissions\r\n  const dispatchValidation = () => {\r\n    const token = localStorage.getItem('authToken')\r\n    if (!token) return history.push('/')\r\n    dispatch(validateToken(token))\r\n  }\r\n  const validUser = () => {\r\n    if (validateUser) {\r\n      if (!validateUser.isAdmin || !validateUser.validToken) return history.push('/')\r\n    }\r\n  }\r\n  dispatchValidation()\r\n  validUser()\r\n  return (\r\n    <Box className={cls.container}>\r\n      <Box component={Card} className={cls.addProdBox}>\r\n        <Box className={cls.warnings}>\r\n          <Typography align='center' variant='h6' className={cls.section}>\r\n            ADD - a - PAIR\r\n          </Typography>\r\n          <Typography align='center' className={cls.errors}>\r\n            {showError}\r\n          </Typography>\r\n          <Typography align='center' className={cls.success}>\r\n            {showSuccess}\r\n          </Typography>\r\n        </Box>\r\n        <form onSubmit={submitNewProduct} className={cls.form}>\r\n          <TextField\r\n            size='small'\r\n            type='text'\r\n            label='Product Name'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_item: e.target.value })}\r\n          />\r\n          <TextField\r\n            size='small'\r\n            type='text'\r\n            label='Brand'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_brand: e.target.value })}\r\n          />\r\n          <InputLabel id='select-label'>Shoe Type</InputLabel>\r\n          <Select\r\n            native\r\n            labelId='select-label'\r\n            defaultValue={'shoe type'}\r\n            label='Shoe Type'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_shoeType: e.target.value })}\r\n          >\r\n            <option value='Athletic'>Athletic</option>\r\n            <option value='SkateBoarding'>SkateBoarding</option>\r\n            <option value='Trainers'>Trainers</option>\r\n          </Select>\r\n          <TextField\r\n            size='small'\r\n            type='number'\r\n            label='Price'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_price: e.target.value })}\r\n          />\r\n          <TextField\r\n            size='small'\r\n            type='number'\r\n            label='Stock'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_stock: e.target.value })}\r\n          />\r\n          <TextField\r\n            size='small'\r\n            type='text'\r\n            multiline\r\n            rowsMax={5}\r\n            label='Description'\r\n            onChange={(e) => setProductInfo({ ...productInfo, KN_description: e.target.value })}\r\n          />\r\n          <Box className={cls.uploadBox}>\r\n            <Typography variant='caption'>Add Product image.(multiple images supported)</Typography>\r\n            <FileBase64 type='file' multiple={false} onDone={({ base64 }) => pushImage(base64)} />\r\n          </Box>\r\n          <Button\r\n            className={cls.btn}\r\n            type='submit'\r\n            onClick={() => setProductInfo({ ...productInfo, KN_images: imgArray })}\r\n          >\r\n            Add Product\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n\r\n      <Box component={Card} className={cls.viewProdBox}>\r\n        <Typography align='center' variant='h6' className={cls.section}>\r\n          New KICKS preview\r\n        </Typography>\r\n\r\n        <Box className={cls.newProduct}>\r\n          {productInfo ? (\r\n            <Box>\r\n              <Box component={Card} variant='outlined' className={cls.newProductCarousel}>\r\n                <Carousel interval={2000} indicators={true} controls={false} className={cls.carousel}>\r\n                  {imgArray.map((kicks) => (\r\n                    <Carousel.Item className={cls.carouselItem}>\r\n                      <img key={kicks} className={`${cls.carouselImage}`} src={kicks} alt='kicks' />\r\n                    </Carousel.Item>\r\n                  ))}\r\n                </Carousel>\r\n              </Box>\r\n              <Box className={cls.item} display='flex' flexDirection='column'>\r\n                <Typography className={cls.itemName}>\r\n                  {productInfo.KN_item ? productInfo.KN_item.toUpperCase() : 'Item Name Here'}\r\n                </Typography>\r\n                <Box display='flex' flexDirection='row' justifyContent='space-between'>\r\n                  <Typography className={cls.itemPrice}>\r\n                    ₱{productInfo.KN_price ? parseInt(productInfo.KN_price).toLocaleString(1) : 0}\r\n                  </Typography>\r\n                  <Typography variant='caption'>\r\n                    stock : {productInfo.KN_stock ? parseInt(productInfo.KN_stock) : 0}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant='caption'>Brand : {productInfo.KN_brand}</Typography>\r\n                <Typography variant='caption'>Category : {productInfo.KN_shoeType}</Typography>\r\n                <Typography className={cls.itemDesc}>Item Description : {productInfo.KN_description}</Typography>\r\n              </Box>\r\n            </Box>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddProduct\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\users.slice.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\validateToken.slice.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\product.slice.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\redux\\slices\\registerUser.slice.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\Header.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\registerForm.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\GetProducts.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\access\\loginForm.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\admin\\addProduct.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\LandingPage.js",["116"],"import { Typography } from '@material-ui/core'\r\nimport GetProducts from './GetProducts'\r\nimport Carousel from './Carousel'\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <>\r\n      <Carousel />\r\n      <GetProducts />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\LandingPage.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\Carousel.js",["117"],"import Carousel from 'react-bootstrap/Carousel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport c1 from '../../assets/carousel1.jpg'\r\nimport c2 from '../../assets/carousel2.jpg'\r\nimport c3 from '../../assets/carousel3.jpg'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst CarouselStyle = makeStyles((theme) => ({\r\n  container: {\r\n    width: '85%',\r\n    margin: '0.5rem auto',\r\n  },\r\n  carouselItem: {\r\n    transitionDuration: '1s',\r\n    width: '100%',\r\n    height: 'auto',\r\n  },\r\n  carouselImage: {\r\n    width: '100%',\r\n  },\r\n}))\r\n\r\nconst LandingPage = () => {\r\n  const cls = CarouselStyle()\r\n  const imgArr = [c1, c2, c3]\r\n\r\n  return (\r\n    <div className={cls.container}>\r\n      <Carousel interval={2500} indicators={false} controls={false}>\r\n        {imgArr.map((crImage, index) => (\r\n          <Carousel.Item key={index} className={cls.carouselItem}>\r\n            <img\r\n              className={cls.carouselImage}\r\n              key={crImage}\r\n              src={crImage}\r\n              alt=\"carousel image\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\ItemView.js",["118","119"],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\ItemView.style.js",[],"C:\\Users\\akosi\\Desktop\\Dev\\KickNiks\\KickNiks-Client\\src\\components\\browse\\Cart.js",["120","121","122","123","124","125","126","127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":28,"column":6,"nodeType":"134","endLine":28,"endColumn":46,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":17},{"ruleId":"136","severity":1,"message":"140","line":9,"column":21,"nodeType":"138","messageId":"139","endLine":9,"endColumn":29},{"ruleId":"136","severity":1,"message":"141","line":16,"column":9,"nodeType":"138","messageId":"139","endLine":16,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":28,"column":11,"nodeType":"143","endLine":36,"endColumn":6},{"ruleId":"136","severity":1,"message":"144","line":14,"column":9,"nodeType":"138","messageId":"139","endLine":14,"endColumn":16},{"ruleId":"132","severity":1,"message":"145","line":39,"column":6,"nodeType":"134","endLine":39,"endColumn":34,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"148","line":6,"column":22,"nodeType":"138","messageId":"139","endLine":6,"endColumn":26},{"ruleId":"136","severity":1,"message":"149","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":21},{"ruleId":"136","severity":1,"message":"144","line":16,"column":9,"nodeType":"138","messageId":"139","endLine":16,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":23,"column":6,"nodeType":"134","endLine":23,"endColumn":8,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"151","line":1,"column":20,"nodeType":"138","messageId":"139","endLine":1,"endColumn":29},{"ruleId":"136","severity":1,"message":"152","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":32,"column":13,"nodeType":"155","endLine":37,"endColumn":15},{"ruleId":"136","severity":1,"message":"156","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":23},{"ruleId":"132","severity":1,"message":"157","line":31,"column":6,"nodeType":"134","endLine":31,"endColumn":45,"suggestions":"158"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":17},{"ruleId":"136","severity":1,"message":"156","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"136","severity":1,"message":"159","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":13},{"ruleId":"136","severity":1,"message":"160","line":6,"column":27,"nodeType":"138","messageId":"139","endLine":6,"endColumn":32},{"ruleId":"136","severity":1,"message":"141","line":10,"column":9,"nodeType":"138","messageId":"139","endLine":10,"endColumn":21},{"ruleId":"136","severity":1,"message":"161","line":11,"column":9,"nodeType":"138","messageId":"139","endLine":11,"endColumn":17},{"ruleId":"136","severity":1,"message":"162","line":13,"column":10,"nodeType":"138","messageId":"139","endLine":13,"endColumn":15},{"ruleId":"136","severity":1,"message":"163","line":13,"column":17,"nodeType":"138","messageId":"139","endLine":13,"endColumn":25},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"no-unused-vars","'getCart' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'validateUser' is assigned a value but never used.","The 'sendToLogin' function makes the dependencies of useEffect Hook (at line 42) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'sendToLogin' in its own useCallback() Hook.","VariableDeclarator","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userValidation'. Either include it or remove the dependency array.",["167"],"'productSlice' is defined but never used.","'Link' is defined but never used.","'openProduct' is defined but never used.",["168"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'validateToken' is defined but never used.","React Hook useEffect has a missing dependency: 'item_ID'. Either include it or remove the dependency array.",["169"],"'Box' is defined but never used.","'Modal' is defined but never used.","'dispatch' is assigned a value but never used.","'state' is assigned a value but never used.","'setstate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [currentUser, dispatch, modalLogin, modalRegister]",{"range":"178","text":"179"},"Update the dependencies array to be: [LoggedInUser, ValidateUser, userValidation]",{"range":"180","text":"181"},"Update the dependencies array to be: [dispatch]",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch, setImageIndex, Product.cart, item_ID]",{"range":"184","text":"185"},[1099,1139],"[currentUser, dispatch, modalLogin, modalRegister]",[1233,1261],"[LoggedInUser, ValidateUser, userValidation]",[887,889],"[dispatch]",[1205,1244],"[dispatch, setImageIndex, Product.cart, item_ID]"]